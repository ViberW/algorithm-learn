1. 与操作
x&(x+1)  == x的最大前缀;
如: 1011 & (1011+1) ==> 1011 & (1100) => 1000
算法例题: Solution201

//////////////
x &= x - 1 不断剔除右边的1位, 

算法例题: Solution461

//////////////
 x += (x & -x) 不断抬高x且值为2的倍数
////////////////
* 交换两个数:
a=a^b;
b=a^b;
a=a^b;

* 实现加减操作 {@link Solution371}

* 二进制中1的个数:
 1. 方法一:  for(i in [0,32]) if(n&(1<<i) !=0) ans++;
 2. 方法二: while(n!=0) {n=n&(n-1); ans++}     //n&(n-1)本质上将最后一位的1置为0;

* 只出现一次的(1个)数字 {@link Solution136}
* 只出现一次的(2个)数字 {@link Solution260}

* 相邻位数的调换: {@link Solution190} {@link Solution201}
* 最右1位置: {@link Solution191}
* 两数之和: {@link Solution371}